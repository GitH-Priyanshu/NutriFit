<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NutriFit - AI-Powered Diet & Lifestyle Coach</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
            /*hello*/
        :root {
            --primary-green: #4caf50;
            --secondary-yellow: #ffc107;
            --accent-teal: #26a69a;
            --light-green: #e8f5e8;
            --dark-green: #2e7d32;
            --text-dark: #2c3e50;
            --text-light: #7f8c8d;
            --white: #ffffff;
            --light-gray: #f8f9fa;
            --border-color: #e0e0e0;
            /* Updated light mode background to use green gradient from reference */
            --bg-primary: linear-gradient(135deg,
                    #4caf50 0%,
                    #26a69a 100%);
            /* Green gradient background for body */
            --bg-secondary: #ffffff;
            /* White background for secondary elements */
            --bg-card: #ffffff;
            /* White background for cards */
            --text-primary: #2c3e50;
            /* Dark text */
            --text-secondary: #7f8c8d;
            /* Light gray text */
            --accent-color: #4caf50;
            /* Primary green */
            --accent-hover: #45a049;
            /* Darker green for hover */
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        [data-theme="dark"] {
            --primary-green: #66bb6a;
            --secondary-yellow: #ffd54f;
            --accent-teal: #4db6ac;
            --light-green: #1b5e20;
            --dark-green: #81c784;
            --text-dark: #eceff1;
            --text-light: #b0bec5;
            --white: #263238;
            --light-gray: #37474f;
            --border-color: #455a64;
            --bg-primary: #0a0a0a;
            /* Dark background for body */
            --bg-secondary: #111111;
            /* Very dark gray for secondary elements */
            --bg-card: #1a1a1a;
            /* Dark gray for cards */
            --text-primary: #ffffff;
            /* White text */
            --text-secondary: #cccccc;
            /* Light gray text */
            --accent-color: #66bb6a;
            /* Lighter green for dark mode */
            --accent-hover: #4caf50;
            /* Darker green for hover */
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        }

        body {
            font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
            /* Fixed background to use dark mode variable properly */
            /* CHANGE: Updated to use green gradient background in light mode */
            background: var(--bg-primary);
            min-height: 100vh;
            color: var(--text-dark);
            transition: all 0.3s ease;
            opacity: 0;
            animation: fadeInUp 0.8s ease forwards;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Added top navigation bar with tabs and profile */
        .top-nav {
            background: var(--white);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            height: 70px;
        }

        .nav-tabs {
            display: flex;
            gap: 30px;
        }

        .nav-tab {
            padding: 20px 0;
            color: var(--text-light);
            text-decoration: none;
            font-weight: 500;
            border-bottom: 3px solid transparent;
            transition: all 0.3s ease;
        }

        .nav-tab:hover,
        .nav-tab.active {
            color: var(--primary-green);
            border-bottom-color: var(--primary-green);
        }

        .nav-profile {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .profile-pic {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg,
                    var(--primary-green),
                    var(--secondary-yellow));
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }

        .dark-mode-toggle {
            background: none;
            border: none;
            font-size: 1.2rem;
            cursor: pointer;
            color: var(--text-light);
            transition: color 0.3s ease;
        }

        .dark-mode-toggle:hover {
            color: var(--primary-green);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 20px;
            display: flex;
            gap: 30px;
        }

        /* Added sidebar navigation for modern dashboard look */
        .sidebar {
            width: 80px;
            background: var(--white);
            border-radius: 20px;
            padding: 20px 0;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            height: fit-content;
            position: sticky;
            top: 100px;
        }

        .sidebar-icon {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 15px 0;
            color: var(--text-light);
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 10px;
            margin: 5px 10px;
        }

        .sidebar-icon:hover,
        .sidebar-icon.active {
            background: var(--light-green);
            color: var(--primary-green);
            transform: scale(1.05);
        }

        .sidebar-icon i {
            font-size: 1.5rem;
            margin-bottom: 5px;
        }

        .sidebar-icon span {
            font-size: 0.7rem;
            font-weight: 500;
        }

        .main-content {
            flex: 1;
        }

        .header {
            text-align: center;
            color: white;
            margin-bottom: 40px;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        /* Added greeting with personality */
        .greeting {
            background: var(--white);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border-left: 5px solid var(--secondary-yellow);
        }

        .greeting h2 {
            color: var(--primary-green);
            margin-bottom: 10px;
            font-size: 1.5rem;
        }

        .greeting p {
            color: var(--text-light);
            font-size: 1.1rem;
        }

        .dashboard {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }

        .card {
            background: var(--white);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        /* Enhanced hover animations with glow effect */
        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 50px rgba(76, 175, 80, 0.15);
        }

        .card::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg,
                    var(--primary-green),
                    var(--secondary-yellow));
        }

        .card-header {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
        }

        .card-header i {
            font-size: 1.8rem;
            margin-right: 15px;
            color: var(--primary-green);
            padding: 12px;
            background: var(--light-green);
            border-radius: 12px;
        }

        .card-header h3 {
            font-size: 1.4rem;
            color: var(--text-dark);
            font-weight: 600;
        }

        .mood-selector {
            display: flex;
            gap: 12px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .mood-btn {
            padding: 12px 18px;
            border: 2px solid var(--border-color);
            border-radius: 25px;
            background: var(--white);
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.95rem;
            font-weight: 500;
        }

        .mood-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .mood-btn.active {
            background: var(--primary-green);
            color: white;
            border-color: var(--primary-green);
            transform: scale(1.05);
        }

        .voice-controls {
            display: flex;
            gap: 12px;
            margin-bottom: 20px;
        }

        .voice-btn,
        .image-btn {
            flex: 1;
            padding: 15px;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            font-size: 0.95rem;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .voice-btn {
            background: var(--primary-green);
            color: white;
        }

        .voice-btn:hover {
            background: var(--dark-green);
            transform: translateY(-2px);
        }

        .image-btn {
            background: var(--accent-teal);
            color: white;
        }

        .image-btn:hover {
            background: #00695c;
            transform: translateY(-2px);
        }

        /* Added progress rings instead of bars */
        .progress-ring {
            width: 80px;
            height: 80px;
            margin: 10px auto;
        }

        .progress-ring circle {
            fill: none;
            stroke-width: 6;
            stroke-linecap: round;
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
        }

        .progress-ring .bg {
            stroke: var(--border-color);
        }

        .progress-ring .progress {
            stroke: var(--primary-green);
            stroke-dasharray: 251.2;
            stroke-dashoffset: 251.2;
            animation: progressFill 2s ease-in-out forwards;
        }

        @keyframes progressFill {
            to {
                stroke-dashoffset: calc(251.2 - (251.2 * var(--progress)) / 100);
            }
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .stat-item {
            text-align: center;
            padding: 15px;
            background: var(--light-gray);
            border-radius: 15px;
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--primary-green);
            margin-bottom: 5px;
        }

        /* Added pulse effect for heart rate */
        .heart-rate .stat-value {
            animation: heartPulse 1.5s infinite;
        }

        @keyframes heartPulse {

            0%,
            100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.1);
            }
        }

        .stat-label {
            font-size: 0.85rem;
            color: var(--text-light);
            font-weight: 500;
        }

        /* Enhanced meal cards with images */
        .meal-suggestions {
            grid-column: 1 / -1;
        }

        .meal-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 25px;
        }

        .meal-card {
            background: var(--light-gray);
            border-radius: 15px;
            padding: 20px;
            border-left: 5px solid var(--primary-green);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .meal-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        .meal-card::before {
            content: "🍽️";
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 2rem;
            opacity: 0.3;
        }

        .meal-card h4 {
            color: var(--text-dark);
            margin-bottom: 10px;
            font-size: 1.2rem;
            font-weight: 600;
        }

        .meal-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 15px;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .eco-score {
            background: var(--primary-green);
            color: white;
            padding: 4px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
        }

        .eco-score.medium {
            background: var(--secondary-yellow);
            color: var(--text-dark);
        }

        .eco-score.low {
            background: #ff5722;
        }

        /* Added chart container for trends */
        .chart-container {
            margin-top: 20px;
            height: 200px;
            position: relative;
        }

        /* Mobile-friendly bottom navigation */
        .mobile-nav {
            display: none;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: var(--white);
            border-top: 1px solid var(--border-color);
            padding: 10px 0;
            z-index: 100;
        }

        .mobile-nav-items {
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .mobile-nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 8px;
            color: var(--text-light);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .mobile-nav-item.active,
        .mobile-nav-item:hover {
            color: var(--primary-green);
        }

        .mobile-nav-item i {
            font-size: 1.2rem;
            margin-bottom: 4px;
        }

        .mobile-nav-item span {
            font-size: 0.7rem;
        }

        /* Responsive design improvements */
        @media (max-width: 768px) {
            .nav-tabs {
                display: none;
            }

            .container {
                flex-direction: column;
                padding: 20px 15px 80px;
            }

            .sidebar {
                display: none;
            }

            .mobile-nav {
                display: block;
            }

            .dashboard {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .meal-grid {
                grid-template-columns: 1fr;
            }

            .header h1 {
                font-size: 2rem;
            }

            .card {
                padding: 20px;
            }
        }

        .budget-slider {
            width: 100%;
            margin: 15px 0;
        }

        .slider {
            width: 100%;
            height: 6px;
            border-radius: 5px;
            background: var(--border-color);
            outline: none;
            -webkit-appearance: none;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary-green);
            cursor: pointer;
        }

        .cultural-settings {
            margin-top: 15px;
        }

        .cultural-options {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
        }

        .cultural-tag {
            padding: 8px 15px;
            background: var(--light-green);
            color: var(--primary-green);
            border-radius: 20px;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .cultural-tag:hover {
            transform: translateY(-2px);
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        }

        .cultural-tag.active {
            background: var(--primary-green);
            color: white;
        }

        .reminder-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid var(--border-color);
        }

        .reminder-item:last-child {
            border-bottom: none;
        }

        .toggle-switch {
            position: relative;
            width: 50px;
            height: 24px;
            background: var(--border-color);
            border-radius: 12px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .toggle-switch.active {
            background: var(--primary-green);
        }

        .toggle-switch::after {
            content: "";
            position: absolute;
            width: 20px;
            height: 20px;
            background: white;
            border-radius: 50%;
            top: 2px;
            left: 2px;
            transition: transform 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .toggle-switch.active::after {
            transform: translateX(26px);
        }

        .hidden {
            display: none;
        }

        .listening {
            animation: pulse 1.5s infinite;
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }

            100% {
                transform: scale(1);
            }
        }

        .file-upload {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .file-upload input[type="file"] {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        /* Enhanced dark mode styles with darker colors */
        .dark-mode {
            --bg-primary: #0a0a0a;
            --bg-secondary: #111111;
            --bg-card: #1a1a1a;
            --text-primary: #ffffff;
            --text-secondary: #cccccc;
            --border-color: #333333;
            --accent-color: #4caf50;
            --accent-hover: #45a049;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        }

        /* Added dark mode body background override */
        .dark-mode body {
            background: var(--bg-primary) !important;
        }

        .dark-mode .card {
            background: var(--bg-card);
            border: 1px solid #2a2a2a;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.4);
        }

        .dark-mode .top-nav {
            background: #0d0d0d;
            border-bottom: 1px solid #2a2a2a;
        }

        .dark-mode .sidebar {
            background: #0d0d0d;
            border-right: 1px solid #2a2a2a;
        }

        .dark-mode .main-content {
            background: var(--bg-primary);
        }

        .dark-mode .nav-tab {
            color: #888888;
        }

        .dark-mode .nav-tab.active,
        .dark-mode .nav-tab:hover {
            color: #ffffff;
            background: #2a2a2a;
        }

        .dark-mode .mood-btn {
            background: #2a2a2a;
            color: #cccccc;
            border: 1px solid #333333;
        }

        .dark-mode .mood-btn.active {
            background: var(--accent-color);
            color: #ffffff;
        }

        .dark-mode .cultural-tag {
            background: #2a2a2a;
            color: #cccccc;
            border: 1px solid #333333;
        }

        .dark-mode .cultural-tag.active {
            background: var(--accent-color);
            color: #ffffff;
        }

        .dark-mode .meal-card {
            background: #222222;
            border: 1px solid #333333;
        }

        .dark-mode input,
        .dark-mode select,
        .dark-mode textarea {
            background: #2a2a2a;
            color: #ffffff;
            border: 1px solid #333333;
        }

        .dark-mode button {
            background: #2a2a2a;
            color: #cccccc;
            border: 1px solid #333333;
        }

        .dark-mode button:hover {
            background: #333333;
        }

        /* Added styles for new tab system and ingredient generator */
        .meal-log-tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid var(--border-color);
        }

        .tab-btn {
            flex: 1;
            padding: 12px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-weight: 500;
            color: var(--text-secondary);
            transition: all 0.3s ease;
            border-bottom: 2px solid transparent;
        }

        .tab-btn.active {
            color: var(--accent-color);
            border-bottom-color: var(--accent-color);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .ingredients-input h4 {
            color: var(--accent-color);
            margin-bottom: 10px;
        }

        .ingredient-input-section {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }

        .ingredient-input-section input {
            flex: 1;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: var(--bg-secondary);
            color: var(--text-primary);
        }

        .add-ingredient-btn {
            padding: 10px 15px;
            background: var(--accent-color);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .add-ingredient-btn:hover {
            background: var(--accent-hover);
        }

        .ingredients-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-bottom: 15px;
            min-height: 40px;
        }

        .ingredient-tag {
            background: var(--accent-color);
            color: white;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .ingredient-tag .remove-btn {
            background: none;
            border: none;
            color: white;
            cursor: pointer;
            font-size: 16px;
            padding: 0;
            margin-left: 5px;
        }

        .generate-recipe-btn {
            width: 100%;
            padding: 12px;
            background: var(--accent-color);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: background 0.3s ease;
            margin-bottom: 20px;
        }

        .generate-recipe-btn:hover:not(:disabled) {
            background: var(--accent-hover);
        }

        .generate-recipe-btn:disabled {
            background: #666;
            cursor: not-allowed;
        }

        .ai-suggestions {
            display: none;
        }

        .ai-suggestions.show {
            display: block;
        }

        .recipe-suggestion {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
        }

        .recipe-suggestion h5 {
            color: var(--accent-color);
            margin-bottom: 8px;
        }

        .selected-preferences-info {
            margin-top: 15px;
            padding: 15px;
            background: var(--bg-secondary);
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        .preference-detail {
            margin-bottom: 10px;
            padding: 10px;
            background: var(--bg-card);
            border-radius: 6px;
            border-left: 3px solid var(--accent-color);
        }

        .preference-detail h5 {
            color: var(--accent-color);
            margin-bottom: 5px;
        }

        .preference-detail p {
            font-size: 14px;
            color: var(--text-secondary);
            margin-bottom: 5px;
        }

        .preference-restrictions {
            font-size: 12px;
            color: #ff6b6b;
        }

        /* Added budget filter styles */
        .budget-filter {
            margin: 10px 0;
            padding: 10px;
            background: var(--bg-card);
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        .budget-indicator {
            display: inline-block;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            font-weight: bold;
            margin-left: 10px;
        }

        .budget-low {
            background: #4caf50;
            color: white;
        }

        .budget-medium {
            background: #ff9800;
            color: white;
        }

        .budget-high {
            background: #f44336;
            color: white;
        }
    </style>
</head>

<body>
    <!-- Added top navigation with profile and dark mode toggle -->
    <nav class="top-nav">
        <div class="nav-container">
            <div class="nav-tabs">
                <a href="#" class="nav-tab active">Dashboard</a>
                <a href="#" class="nav-tab">Log Meal</a>
                <a href="#" class="nav-tab">Suggestions</a>
                <a href="#" class="nav-tab">Progress</a>
                <a href="#" class="nav-tab">Settings</a>
            </div>
            <div class="nav-profile">
                <button class="dark-mode-toggle" id="darkModeToggle">
                    <i class="fas fa-moon"></i>
                </button>
                <div class="profile-pic">R</div>
                <span>Rajeev</span>
            </div>
        </div>
    </nav>

    <div class="container">
        <!-- Added sidebar navigation for modern dashboard look -->
        <aside class="sidebar">
            <div class="sidebar-icon active">
                <i class="fas fa-home"></i>
                <span>Home</span>
            </div>
            <div class="sidebar-icon">
                <i class="fas fa-utensils"></i>
                <span>Meals</span>
            </div>
            <div class="sidebar-icon">
                <i class="fas fa-chart-line"></i>
                <span>Stats</span>
            </div>
            <div class="sidebar-icon">
                <i class="fas fa-heart"></i>
                <span>Health</span>
            </div>
            <div class="sidebar-icon">
                <i class="fas fa-cog"></i>
                <span>Settings</span>
            </div>
        </aside>

        <main class="main-content">
            <div class="header">
                <h1><i class="fas fa-brain"></i> NutriFit</h1>
                <p>AI-Powered Personalized Diet & Lifestyle Coach</p>
            </div>

            <!-- Added personalized greeting -->
            <div class="greeting">
                <h2>Good Evening Rajeev 👋</h2>
                <p>
                    Here's your personalized meal plan! You're just 2 glasses away from
                    your water goal 💧
                </p>
            </div>

            <div class="dashboard">
                <!-- Mood & Health Tracking -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-heart"></i>
                        <h3>Mood & Health</h3>
                    </div>
                    <p>How are you feeling today?</p>
                    <div class="mood-selector">
                        <button class="mood-btn" data-mood="energetic">
                            😄 Energetic
                        </button>
                        <button class="mood-btn" data-mood="tired">😴 Tired</button>
                        <button class="mood-btn" data-mood="stressed">😰 Stressed</button>
                        <button class="mood-btn" data-mood="calm">😌 Calm</button>
                    </div>
                    <div class="stats-grid">
                        <div class="stat-item heart-rate">
                            <div class="stat-value">72</div>
                            <div class="stat-label">Heart Rate</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">7.5h</div>
                            <div class="stat-label">Sleep</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">8,432</div>
                            <div class="stat-label">Steps</div>
                        </div>
                    </div>
                </div>

                <!-- AI Voice & Image Support -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-microphone"></i>
                        <h3>Log Your Meal</h3>
                    </div>

                    <!-- Added tab navigation for meal logging -->
                    <div class="meal-log-tabs">
                        <button class="tab-btn active" data-tab="voice-photo">
                            Voice & Photo
                        </button>
                        <button class="tab-btn" data-tab="ingredients">
                            AI Recipe Generator
                        </button>
                    </div>

                    <!-- Voice & Photo Tab Content -->
                    <div class="tab-content active" id="voice-photo-tab">
                        <div class="voice-controls">
                            <button class="voice-btn" id="voiceBtn">
                                <i class="fas fa-microphone"></i> Voice Log
                            </button>
                            <div class="file-upload">
                                <button class="image-btn">
                                    <i class="fas fa-camera"></i> Photo Log
                                </button>
                                <input type="file" id="imageInput" accept="image/*" />
                            </div>
                        </div>
                        <div id="voiceResult" class="hidden">
                            <p>
                                <strong>Detected:</strong> <span id="detectedFood"></span>
                            </p>
                        </div>
                        <div id="imageResult" class="hidden">
                            <p><strong>Analyzing image...</strong></p>
                        </div>
                    </div>

                    <!-- Added AI Recipe Generator Tab Content -->
                    <div class="tab-content" id="ingredients-tab">
                        <div class="ingredients-input">
                            <h4><i class="fas fa-magic"></i> AI Recipe Generator</h4>
                            <p>Add ingredients you have, and AI will suggest dishes!</p>

                            <div class="ingredient-input-section">
                                <input type="text" id="ingredientInput"
                                    placeholder="Enter ingredient (e.g., tomatoes, chicken, rice)" />
                                <button class="add-ingredient-btn" id="addIngredientBtn">
                                    <i class="fas fa-plus"></i> Add
                                </button>
                            </div>

                            <div class="ingredients-list" id="ingredientsList">
                                <!-- Added ingredients will appear here -->
                            </div>

                            <button class="generate-recipe-btn" id="generateRecipeBtn" disabled>
                                <i class="fas fa-robot"></i> Generate Recipe Ideas
                            </button>

                            <div class="ai-suggestions" id="aiSuggestions">
                                <!-- AI generated recipes will appear here -->
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Budget & Local Ingredients -->
                <div class="card">
                    <div class="card-header">
                        <!-- Changed dollar icon to rupee icon -->
                        <i class="fas fa-rupee-sign"></i>
                        <h3>Budget Settings</h3>
                    </div>
                    <!-- Changed currency from $ to ₹ and adjusted budget range for Indian context -->
                    <p>Weekly grocery budget: ₹<span id="budgetValue">2000</span></p>
                    <div class="budget-slider">
                        <input type="range" min="800" max="8000" value="2000" class="slider" id="budgetSlider" />
                    </div>
                    <p>
                        <small>We'll suggest meals within your budget using local Indian
                            ingredients</small>
                    </p>

                    <!-- Added budget filter toggle -->
                    <div class="budget-filter">
                        <label>
                            <input type="checkbox" id="budgetFilterToggle" checked />
                            Filter meal suggestions by budget
                        </label>
                        <p>
                            <small>Only show meals within your weekly budget range</small>
                        </p>
                    </div>
                </div>

                <!-- Cultural & Religious Preferences -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-globe"></i>
                        <h3>Cultural Preferences</h3>
                    </div>
                    <div class="cultural-settings">
                        <p>Select your dietary preferences:</p>
                        <div class="cultural-options">
                            <span class="cultural-tag" data-pref="vegetarian">🥬 Vegetarian</span>
                            <span class="cultural-tag" data-pref="vegan">🌱 Vegan</span>
                            <span class="cultural-tag" data-pref="halal">🕌 Halal</span>
                            <span class="cultural-tag" data-pref="kosher">✡️ Kosher</span>
                            <span class="cultural-tag" data-pref="gluten-free">🌾 Gluten-Free</span>
                            <span class="cultural-tag" data-pref="keto">🥑 Keto</span>
                        </div>

                        <!-- Added cultural preferences details display -->
                        <div class="selected-preferences-info" id="selectedPreferencesInfo">
                            <!-- Selected preference details will appear here -->
                        </div>
                    </div>
                </div>

                <!-- Progress Dashboard with Charts -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-chart-line"></i>
                        <h3>Today's Progress</h3>
                    </div>
                    <div>
                        <p>Calories: 1,240 / 2,000</p>
                        <svg class="progress-ring" style="--progress: 62">
                            <circle class="bg" cx="40" cy="40" r="36"></circle>
                            <circle class="progress" cx="40" cy="40" r="36"></circle>
                        </svg>
                    </div>
                    <div>
                        <p>Water: 6 / 8 glasses</p>
                        <svg class="progress-ring" style="--progress: 75">
                            <circle class="bg" cx="40" cy="40" r="36"></circle>
                            <circle class="progress" cx="40" cy="40" r="36"></circle>
                        </svg>
                    </div>
                    <div>
                        <p>Activity: 45 / 60 minutes</p>
                        <svg class="progress-ring" style="--progress: 75">
                            <circle class="bg" cx="40" cy="40" r="36"></circle>
                            <circle class="progress" cx="40" cy="40" r="36"></circle>
                        </svg>
                    </div>
                    <!-- Added chart for weekly trends -->
                    <div class="chart-container">
                        <canvas id="weeklyChart"></canvas>
                    </div>
                </div>

                <!-- Smart Reminders -->
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-bell"></i>
                        <h3>Smart Reminders</h3>
                    </div>
                    <div class="reminder-item">
                        <span>🍽️ Meal Reminders</span>
                        <div class="toggle-switch active" data-reminder="meals"></div>
                    </div>
                    <div class="reminder-item">
                        <span>💧 Water Intake</span>
                        <div class="toggle-switch active" data-reminder="water"></div>
                    </div>
                    <div class="reminder-item">
                        <span>🏃‍♂️ Exercise Time</span>
                        <div class="toggle-switch" data-reminder="exercise"></div>
                    </div>
                    <div class="reminder-item">
                        <span>😴 Sleep Schedule</span>
                        <div class="toggle-switch active" data-reminder="sleep"></div>
                    </div>
                </div>

                <!-- Meal Suggestions -->
                <div class="card meal-suggestions">
                    <div class="card-header">
                        <i class="fas fa-utensils"></i>
                        <h3>Personalized Meal Suggestions</h3>
                    </div>
                    <p>Based on your mood, health data, and preferences:</p>
                    <div class="meal-grid" id="mealSuggestions">
                        <!-- Meals will be populated by JavaScript -->
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Added mobile bottom navigation -->
    <nav class="mobile-nav">
        <div class="mobile-nav-items">
            <a href="#" class="mobile-nav-item active">
                <i class="fas fa-home"></i>
                <span>Home</span>
            </a>
            <a href="#" class="mobile-nav-item">
                <i class="fas fa-utensils"></i>
                <span>Meals</span>
            </a>
            <a href="#" class="mobile-nav-item">
                <i class="fas fa-chart-line"></i>
                <span>Stats</span>
            </a>
            <a href="#" class="mobile-nav-item">
                <i class="fas fa-heart"></i>
                <span>Health</span>
            </a>
            <a href="#" class="mobile-nav-item">
                <i class="fas fa-cog"></i>
                <span>Settings</span>
            </a>
        </div>
    </nav>

    <script>
        // Cultural preferences data with detailed information
        const culturalPreferencesData = {
            vegetarian: {
                name: "Vegetarian",
                icon: "🥬",
                description: "Plant-based meals with dairy and eggs",
                restrictions: ["no meat", "no fish", "no poultry"],
                commonIngredients: [
                    "vegetables",
                    "dairy",
                    "eggs",
                    "legumes",
                    "grains",
                ],
            },
            vegan: {
                name: "Vegan",
                icon: "🌱",
                description: "Completely plant-based meals",
                restrictions: ["no animal products"],
                commonIngredients: [
                    "vegetables",
                    "fruits",
                    "nuts",
                    "seeds",
                    "legumes",
                    "grains",
                ],
            },
            halal: {
                name: "Halal",
                icon: "🕌",
                description: "Islamic dietary guidelines",
                restrictions: ["no pork", "no alcohol", "halal meat only"],
                commonIngredients: ["halal meat", "vegetables", "rice", "spices"],
            },
            kosher: {
                name: "Kosher",
                icon: "✡️",
                description: "Jewish dietary laws",
                restrictions: ["no pork", "no shellfish", "no mixing meat and dairy"],
                commonIngredients: ["kosher meat", "vegetables", "kosher dairy"],
            },
            "gluten-free": {
                name: "Gluten-Free",
                icon: "🌾",
                description: "No gluten-containing grains",
                restrictions: ["no wheat", "no barley", "no rye"],
                commonIngredients: ["rice", "quinoa", "vegetables", "meat", "dairy"],
            },
            keto: {
                name: "Keto",
                icon: "🥑",
                description: "High-fat, low-carb diet",
                restrictions: ["very low carbs", "high fat"],
                commonIngredients: [
                    "meat",
                    "fish",
                    "eggs",
                    "cheese",
                    "avocado",
                    "nuts",
                ],
            },
        };

        let selectedPreferences = [];
        let currentMood = "energetic"; // Default mood
        let currentBudget = 2000; // Default budget for Indian context

        // Dark mode functionality
        const darkModeToggle = document.getElementById("darkModeToggle");
        const body = document.body;

        darkModeToggle.addEventListener("click", function () {
            body.dataset.theme = body.dataset.theme === "dark" ? "" : "dark";
            const icon = this.querySelector("i");
            icon.className =
                body.dataset.theme === "dark" ? "fas fa-sun" : "fas fa-moon";
        });

        // Initialize weekly chart
        const ctx = document.getElementById("weeklyChart").getContext("2d");
        new Chart(ctx, {
            type: "line",
            data: {
                labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                datasets: [
                    {
                        label: "Calories",
                        data: [1800, 2100, 1900, 2200, 1850, 2000, 1950],
                        borderColor: "#4CAF50",
                        backgroundColor: "rgba(76, 175, 80, 0.1)",
                        tension: 0.4,
                    },
                    {
                        label: "Water (glasses)",
                        data: [6, 8, 7, 9, 6, 8, 7],
                        borderColor: "#26A69A",
                        backgroundColor: "rgba(38, 166, 154, 0.1)",
                        tension: 0.4,
                    },
                ],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    },
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: "rgba(0,0,0,0.1)",
                        },
                    },
                    x: {
                        grid: {
                            display: false,
                        },
                    },
                },
            },
        });

        // Mood selection
        document.querySelectorAll(".mood-btn").forEach((btn) => {
            btn.addEventListener("click", function () {
                document
                    .querySelectorAll(".mood-btn")
                    .forEach((b) => b.classList.remove("active"));
                this.classList.add("active");
                currentMood = this.dataset.mood;
                updateMealSuggestions();
            });
        });

        // Budget slider functionality
        const budgetSlider = document.getElementById("budgetSlider");
        const budgetValue = document.getElementById("budgetValue");
        const budgetFilterToggle = document.getElementById("budgetFilterToggle");

        budgetSlider.addEventListener("input", function () {
            currentBudget = this.value;
            budgetValue.textContent = this.value;
            if (budgetFilterToggle.checked) {
                updateMealSuggestions();
            }
        });

        budgetFilterToggle.addEventListener("change", function () {
            updateMealSuggestions();
        });

        document.querySelectorAll(".cultural-tag").forEach((tag) => {
            tag.addEventListener("click", function () {
                this.classList.toggle("active");
                const pref = this.dataset.pref;
                if (selectedPreferences.includes(pref)) {
                    selectedPreferences = selectedPreferences.filter((p) => p !== pref);
                } else {
                    selectedPreferences.push(pref);
                }
                updateSelectedPreferencesInfo();
                updateMealSuggestions();
            });
        });

        function updateSelectedPreferencesInfo() {
            const infoContainer = document.getElementById(
                "selectedPreferencesInfo"
            );

            if (selectedPreferences.length === 0) {
                infoContainer.innerHTML =
                    '<p style="color: var(--text-secondary); font-style: italic;">No dietary preferences selected</p>';
                return;
            }

            let infoHTML =
                '<h4 style="color: var(--accent-color); margin-bottom: 10px;">Your Selected Preferences:</h4>';

            selectedPreferences.forEach((pref) => {
                const prefData = culturalPreferencesData[pref];
                if (prefData) {
                    infoHTML += `
                        <div class="preference-detail">
                            <h5>${prefData.icon} ${prefData.name}</h5>
                            <p>${prefData.description}</p>
                            <div class="preference-restrictions">
                                Restrictions: ${prefData.restrictions.join(
                        ", "
                    )}
                            </div>
                        </div>
                    `;
                }
            });

            infoContainer.innerHTML = infoHTML;
        }

        // Enhanced meal suggestions with cultural preferences and budget filtering
        function updateMealSuggestions() {
            const selectedMood =
                document.querySelector(".mood-btn.active")?.dataset.mood ||
                "energetic"; // Use 'energetic' as default if no mood is active
            const selectedCultures = Array.from(
                document.querySelectorAll(".cultural-tag.active")
            ).map((tag) => tag.dataset.pref); // Use 'pref' from data attribute
            const budgetFilterEnabled =
                document.getElementById("budgetFilterToggle").checked;

            // Use the global currentBudget variable
            const weeklyBudget = currentBudget;
            const dailyBudget = weeklyBudget / 7;

            const mealDatabase = {
                happy: [
                    // Renamed from 'energetic' to 'happy' to match mood buttons
                    {
                        name: "Butter Chicken with Naan",
                        culture: "north-indian",
                        ingredients: ["chicken", "butter", "tomatoes"],
                        cost: 450,
                        description: "Rich and creamy North Indian favorite",
                    },
                    {
                        name: "Masala Dosa with Sambar",
                        culture: "south-indian",
                        ingredients: ["rice", "lentils", "coconut"],
                        cost: 280,
                        description: "Crispy South Indian crepe with spiced filling",
                    },
                    {
                        name: "Rajma Chawal",
                        culture: "north-indian",
                        ingredients: ["kidney beans", "rice", "spices"],
                        cost: 220,
                        description: "Comfort food from North India",
                    },
                    {
                        name: "Fish Curry with Rice",
                        culture: "coastal",
                        ingredients: ["fish", "coconut milk", "curry leaves"],
                        cost: 380,
                        description: "Coastal delicacy with aromatic spices",
                    },
                    {
                        name: "Chole Bhature",
                        culture: "north-indian",
                        ingredients: ["chickpeas", "flour", "yogurt"],
                        cost: 250,
                        description: "Popular Punjabi street food",
                    },
                    {
                        name: "Hyderabadi Biryani",
                        culture: "south-indian",
                        ingredients: ["basmati rice", "mutton", "saffron"],
                        cost: 550,
                        description: "Royal dish from Hyderabad",
                    },
                    {
                        name: "Pav Bhaji",
                        culture: "western",
                        ingredients: ["mixed vegetables", "bread", "butter"],
                        cost: 200,
                        description: "Mumbai street food favorite",
                    },
                    {
                        name: "Idli Sambar",
                        culture: "south-indian",
                        ingredients: ["rice", "lentils", "vegetables"],
                        cost: 180,
                        description: "Healthy South Indian breakfast",
                    },
                ],
                energetic: [
                    // Kept 'energetic' as a mood option
                    {
                        name: "Poha with Peanuts",
                        culture: "western",
                        ingredients: ["flattened rice", "peanuts", "curry leaves"],
                        cost: 160,
                        description: "Light and energizing breakfast",
                    },
                    {
                        name: "Upma with Vegetables",
                        culture: "south-indian",
                        ingredients: ["semolina", "vegetables", "mustard seeds"],
                        cost: 170,
                        description: "Nutritious South Indian dish",
                    },
                    {
                        name: "Aloo Paratha with Curd",
                        culture: "north-indian",
                        ingredients: ["wheat flour", "potatoes", "yogurt"],
                        cost: 190,
                        description: "Stuffed flatbread with cooling yogurt",
                    },
                    {
                        name: "Sprouts Salad",
                        culture: "healthy",
                        ingredients: ["mixed sprouts", "vegetables", "lemon"],
                        cost: 150,
                        description: "Protein-rich healthy option",
                    },
                    {
                        name: "Quinoa Pulao",
                        culture: "healthy",
                        ingredients: ["quinoa", "vegetables", "spices"],
                        cost: 300,
                        description: "Modern healthy twist on traditional pulao",
                    },
                ],
                comfort: [
                    {
                        name: "Dal Khichdi",
                        culture: "comfort",
                        ingredients: ["rice", "lentils", "ghee"],
                        cost: 180,
                        description: "Ultimate Indian comfort food",
                    },
                    {
                        name: "Maggi with Vegetables",
                        culture: "comfort",
                        ingredients: ["instant noodles", "vegetables", "spices"],
                        cost: 140,
                        description: "Quick comfort meal",
                    },
                    {
                        name: "Bread Pakora",
                        culture: "comfort",
                        ingredients: ["bread", "gram flour", "spices"],
                        cost: 160,
                        description: "Crispy fried comfort snack",
                    },
                    {
                        name: "Tomato Rice",
                        culture: "south-indian",
                        ingredients: ["rice", "tomatoes", "curry leaves"],
                        cost: 170,
                        description: "Simple and comforting South Indian dish",
                    },
                ],
                balanced: [
                    {
                        name: "Mixed Dal with Roti",
                        culture: "balanced",
                        ingredients: ["mixed lentils", "wheat flour", "vegetables"],
                        cost: 200,
                        description: "Balanced protein and carbs",
                    },
                    {
                        name: "Vegetable Pulao",
                        culture: "balanced",
                        ingredients: ["basmati rice", "mixed vegetables", "whole spices"],
                        cost: 220,
                        description: "Nutritious one-pot meal",
                    },
                    {
                        name: "Paneer Tikka with Salad",
                        culture: "north-indian",
                        ingredients: ["paneer", "vegetables", "yogurt"],
                        cost: 280,
                        description: "Protein-rich grilled option",
                    },
                    {
                        name: "South Indian Thali",
                        culture: "south-indian",
                        ingredients: ["rice", "sambar", "rasam", "vegetables"],
                        cost: 250,
                        description: "Complete balanced meal",
                    },
                ],
                // Added 'calm' mood with some meal examples
                calm: [
                    {
                        name: "Chamomile Tea & Oats",
                        icon: "🍵",
                        description: "Soothing oats with herbal tea",
                        calories: 280,
                        price: 220,
                        eco: "high",
                        culturalTags: ["vegetarian", "vegan", "halal", "kosher"],
                    },
                    {
                        name: "Vegetable Soup",
                        icon: "🍲",
                        description: "Warm, comforting vegetable broth",
                        calories: 200,
                        price: 200,
                        eco: "high",
                        culturalTags: [
                            "vegetarian",
                            "vegan",
                            "gluten-free",
                            "halal",
                            "kosher",
                        ],
                    },
                ],
                // Added 'tired' mood with some meal examples
                tired: [
                    {
                        name: "Lentil Soup",
                        culture: "comfort",
                        ingredients: ["lentils", "vegetables", "spices"],
                        cost: 190,
                        description: "Nourishing and easy to digest",
                    },
                    {
                        name: "Simple Rice and Dal",
                        culture: "comfort",
                        ingredients: ["rice", "lentils", "ghee"],
                        cost: 170,
                        description: "Classic comfort meal",
                    },
                ],
                // Added 'stressed' mood with some meal examples
                stressed: [
                    {
                        name: "Dark Chocolate & Berries",
                        culture: "healthy",
                        ingredients: ["dark chocolate", "berries"],
                        cost: 250,
                        description: "Mood-boosting snack",
                    },
                    {
                        name: "Herbal Tea and a light snack",
                        culture: "healthy",
                        ingredients: ["herbal tea", "nuts"],
                        cost: 200,
                        description: "Relaxing and light",
                    },
                ],
            };

            let availableMeals =
                mealDatabase[selectedMood] || mealDatabase.balanced;

            // Filter by cultural preferences
            if (selectedCultures.length > 0) {
                availableMeals = availableMeals.filter(
                    (meal) =>
                        selectedCultures.includes(meal.culture) ||
                        meal.culture === "healthy" ||
                        meal.culture === "comfort" ||
                        meal.culture === "balanced"
                );
            }

            if (budgetFilterEnabled) {
                availableMeals = availableMeals.filter(
                    (meal) => meal.cost <= dailyBudget * 1.5
                ); // Allow some flexibility
            }

            // Shuffle and take 6 meals
            const shuffled = availableMeals.sort(() => 0.5 - Math.random());
            const selectedMeals = shuffled.slice(0, 6);

            const suggestionsContainer = document.getElementById("mealSuggestions");
            suggestionsContainer.innerHTML = selectedMeals
                .map((meal) => {
                    const budgetClass =
                        meal.cost <= 100
                            ? "budget-low"
                            : meal.cost <= 250
                                ? "budget-medium"
                                : "budget-high";
                    const budgetText =
                        meal.cost <= 100
                            ? "Budget"
                            : meal.cost <= 250
                                ? "Moderate"
                                : "Premium";

                    const culturalBadge =
                        meal.culture !== "healthy" &&
                            meal.culture !== "comfort" &&
                            meal.culture !== "balanced"
                            ? `<span class="cultural-badge">${meal.culture
                                .replace("-", " ")
                                .toUpperCase()}</span>`
                            : "";

                    return `
                    <div class="meal-card">
                        <h4>${meal.name
                        } <span class="budget-indicator ${budgetClass}">₹${meal.cost
                        } - ${budgetText}</span></h4>
                        ${culturalBadge}
                        <p>${meal.description}</p>
                        <div class="ingredients">
                            <strong>Key ingredients:</strong> ${meal.ingredients.join(
                            ", "
                        )}
                        </div>
                        <button onclick="addToMealPlan('${meal.name
                        }')">Add to Meal Plan</button>
                    </div>
                `;
                })
                .join("");
        }

        // Placeholder function for adding to meal plan
        function addToMealPlan(mealName) {
            console.log(`Added ${mealName} to meal plan.`);
            // In a real application, this would add the meal to a user's plan
        }

        document.querySelectorAll(".tab-btn").forEach((btn) => {
            btn.addEventListener("click", function () {
                const targetTab = this.dataset.tab;

                // Remove active class from all tabs and content
                document
                    .querySelectorAll(".tab-btn")
                    .forEach((b) => b.classList.remove("active"));
                document
                    .querySelectorAll(".tab-content")
                    .forEach((c) => c.classList.remove("active"));

                // Add active class to clicked tab and corresponding content
                this.classList.add("active");
                document.getElementById(targetTab + "-tab").classList.add("active");
            });
        });

        let selectedIngredients = [];

        const ingredientInput = document.getElementById("ingredientInput");
        const addIngredientBtn = document.getElementById("addIngredientBtn");
        const ingredientsList = document.getElementById("ingredientsList");
        const generateRecipeBtn = document.getElementById("generateRecipeBtn");
        const aiSuggestions = document.getElementById("aiSuggestions");

        addIngredientBtn.addEventListener("click", addIngredient);
        ingredientInput.addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                addIngredient();
            }
        });

        function addIngredient() {
            const ingredient = ingredientInput.value.trim();
            if (
                ingredient &&
                !selectedIngredients.includes(ingredient.toLowerCase())
            ) {
                selectedIngredients.push(ingredient.toLowerCase());
                updateIngredientsDisplay();
                ingredientInput.value = "";
                updateGenerateButton();
            }
        }

        function removeIngredient(ingredient) {
            selectedIngredients = selectedIngredients.filter(
                (i) => i !== ingredient
            );
            updateIngredientsDisplay();
            updateGenerateButton();
        }

        function updateIngredientsDisplay() {
            ingredientsList.innerHTML = selectedIngredients
                .map(
                    (ingredient) => `
                <span class="ingredient-tag">
                    ${ingredient}
                    <button class="remove-btn" onclick="removeIngredient('${ingredient}')">×</button>
                </span>
            `
                )
                .join("");
        }

        function updateGenerateButton() {
            generateRecipeBtn.disabled = selectedIngredients.length === 0;
        }

        generateRecipeBtn.addEventListener("click", function () {
            // Simulate AI recipe generation
            const recipes = [
                {
                    name: "Fusion Delight",
                    description: `A creative dish combining ${selectedIngredients
                        .slice(0, 3)
                        .join(", ")}`,
                    cookTime: "25 mins",
                    difficulty: "Medium",
                },
                {
                    name: "Quick & Easy Bowl",
                    description: `Simple preparation with ${selectedIngredients.join(
                        ", "
                    )}`,
                    cookTime: "15 mins",
                    difficulty: "Easy",
                },
                {
                    name: "Gourmet Creation",
                    description: `Elevated dish featuring ${selectedIngredients
                        .slice(-2)
                        .join(" and ")}`,
                    cookTime: "40 mins",
                    difficulty: "Hard",
                },
            ];

            aiSuggestions.innerHTML = `
                <h4><i class="fas fa-magic"></i> AI Generated Recipes:</h4>
                ${recipes
                    .map(
                        (recipe) => `
                    <div class="recipe-suggestion">
                        <h5>${recipe.name}</h5>
                        <p>${recipe.description}</p>
                        <div style="display: flex; gap: 15px; font-size: 14px; color: var(--text-secondary); margin-top: 8px;">
                            <span><i class="fas fa-clock"></i> ${recipe.cookTime}</span>
                            <span><i class="fas fa-chart-bar"></i> ${recipe.difficulty}</span>
                        </div>
                    </div>
                `
                    )
                    .join("")}
            `;
            aiSuggestions.classList.add("show");
        });

        // Voice recognition (simulated)
        const voiceBtn = document.getElementById("voiceBtn");
        const voiceResult = document.getElementById("voiceResult");
        const detectedFood = document.getElementById("detectedFood");

        voiceBtn.addEventListener("click", function () {
            this.classList.add("listening");
            this.innerHTML = '<i class="fas fa-microphone"></i> Listening...';

            // Simulate voice recognition
            setTimeout(() => {
                const foods = [
                    "dal chawal",
                    "roti sabzi",
                    "idli sambar",
                    "rajma rice",
                    "chole bhature",
                ];
                const randomFood = foods[Math.floor(Math.random() * foods.length)];

                detectedFood.textContent = randomFood;
                voiceResult.classList.remove("hidden");

                this.classList.remove("listening");
                this.innerHTML = '<i class="fas fa-microphone"></i> Voice Log';
            }, 2000);
        });

        // Image upload (simulated)
        const imageInput = document.getElementById("imageInput");
        const imageResult = document.getElementById("imageResult");

        imageInput.addEventListener("change", function (e) {
            if (e.target.files.length > 0) {
                imageResult.classList.remove("hidden");
                imageResult.innerHTML = "<p><strong>Analyzing image...</strong></p>";

                // Simulate image analysis
                setTimeout(() => {
                    imageResult.innerHTML =
                        "<p><strong>Detected:</strong> Grilled salmon with vegetables (420 calories)</p>";
                }, 2000);
            }
        });

        // Toggle switches
        document.querySelectorAll(".toggle-switch").forEach((toggle) => {
            toggle.addEventListener("click", function () {
                this.classList.toggle("active");
            });
        });

        // Initialize with default mood and update suggestions
        document
            .querySelector('.mood-btn[data-mood="energetic"]')
            .classList.add("active");
        updateSelectedPreferencesInfo(); // Initialize preference info display
        updateMealSuggestions();

        // Simulate real-time health data updates
        setInterval(() => {
            const heartRate = document.querySelector(".heart-rate .stat-value");
            const currentRate = parseInt(heartRate.textContent);
            const newRate = currentRate + Math.floor(Math.random() * 6) - 3; // ±3 variation
            heartRate.textContent = Math.max(60, Math.min(100, newRate));
        }, 5000);
    </script>
</body>

</html>